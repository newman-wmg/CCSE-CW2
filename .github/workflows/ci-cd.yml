name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
  RENDER_API_KEY: ${{ secrets.RENDER_API_KEY }}

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.13'
        cache: 'pip'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

  security-scan:
    needs: build
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.13'
        cache: 'pip'
    
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Install Snyk CLI
      run: npm install -g snyk
    
    - name: Snyk Dependency Scan (SCA)
      run: snyk test --severity-threshold=high
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

    - name: Snyk Code Security Scan (SAST)
      run: snyk code test --severity-threshold=high
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

    - name: Start application for ZAP scan
      run: |
        export DJANGO_SETTINGS_MODULE=securecart.settings
        export PYTHONPATH=$PYTHONPATH:$(pwd)
        gunicorn securecart.wsgi:application --bind 0.0.0.0:8000 --daemon
        sleep 10  # Give the app time to start up

    - name: Confirm app is running
      run: curl -s http://172.17.0.1:8000

    - name: Run OWASP ZAP Scan
      run: |
        docker run --rm \
          --user root \
          --network=host \
          -v $PWD:/zap/wrk/:rw \
          ghcr.io/zaproxy/zaproxy:stable \
          zap-baseline.py \
          -t http://172.17.0.1:8000 \
          --autooff \
          -J report_json.json -w report_md.md -r report_html.html

    - name: Upload ZAP Report
      uses: actions/upload-artifact@v4
      with:
        name: zap-report
        path: |
          report_json.json
          report_md.md
          report_html.html

    - name: Stop application after ZAP scan
      run: pkill gunicorn || true

  deploy:
    needs: security-scan
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - name: Deploy to Render
      uses: JorgeLNJunior/render-deploy@v1.4.5
      with:
        api_key: ${{ secrets.RENDER_API_KEY }}
        service_id: ${{ secrets.RENDER_SERVICE_ID }}
        deployment_environment: production 